AWSTemplateFormatVersion: '2010-09-09'
Description: 'LogGuardian - EventBridge Rules and Scheduling Configuration'

Parameters:
  LambdaFunctionArn:
    Type: String
    Description: ARN of the LogGuardian Lambda function
    
  ScheduleExpression:
    Type: String
    Default: "rate(24 hours)"
    Description: EventBridge schedule expression for compliance checks
    AllowedPattern: "^(rate\\(.*\\)|cron\\(.*\\))$"
    
  Environment:
    Type: String
    Default: dev
    AllowedValues: [dev, staging, prod]
    Description: Deployment environment

Resources:
  # Main EventBridge Rule for Scheduled Execution
  LogGuardianScheduleRule:
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub "logguardian-schedule-${Environment}"
      Description: !Sub "Scheduled trigger for LogGuardian compliance checks - ${Environment}"
      ScheduleExpression: !Ref ScheduleExpression
      State: ENABLED
      Targets:
        - Arn: !Ref LambdaFunctionArn
          Id: "LogGuardianTarget"
          Input: !Sub |
            {
              "source": "eventbridge.schedule",
              "region": "${AWS::Region}",
              "account": "${AWS::AccountId}",
              "environment": "${Environment}",
              "timestamp": "{{ scheduled_time }}"
            }

  # Permission for EventBridge to invoke Lambda
  LogGuardianLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref LambdaFunctionArn
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt LogGuardianScheduleRule.Arn

  # EventBridge Rule for Config Rule State Changes (optional monitoring)
  ConfigRuleStateChangeRule:
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub "logguardian-config-state-${Environment}"
      Description: "Triggers when Config rule compliance state changes"
      EventPattern:
        source:
          - "aws.config"
        detail-type:
          - "Config Rules Compliance Change"
        detail:
          configRuleName:
            - prefix: "logguardian-"
      State: ENABLED
      Targets:
        - Arn: !Ref LambdaFunctionArn
          Id: "ConfigStateChangeTarget"
          Input: !Sub |
            {
              "source": "config.rule.state.change",
              "region": "${AWS::Region}",
              "account": "${AWS::AccountId}",
              "environment": "${Environment}"
            }

  # Permission for Config state change events
  ConfigStateChangeLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref LambdaFunctionArn
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt ConfigRuleStateChangeRule.Arn

  # Dead Letter Queue for failed EventBridge invocations
  EventBridgeDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "logguardian-eventbridge-dlq-${Environment}"
      MessageRetentionPeriod: 1209600  # 14 days
      VisibilityTimeoutSeconds: 60
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: LogGuardian

Outputs:
  EventBridgeRuleArn:
    Description: ARN of the main EventBridge schedule rule
    Value: !GetAtt LogGuardianScheduleRule.Arn
    Export:
      Name: !Sub "${AWS::StackName}-EventBridgeRuleArn"
      
  ConfigStateRuleArn:
    Description: ARN of the Config state change rule
    Value: !GetAtt ConfigRuleStateChangeRule.Arn
    Export:
      Name: !Sub "${AWS::StackName}-ConfigStateRuleArn"
      
  EventBridgeDLQArn:
    Description: ARN of the EventBridge dead letter queue
    Value: !GetAtt EventBridgeDLQ.Arn
    Export:
      Name: !Sub "${AWS::StackName}-EventBridgeDLQArn"
