name: Auto-Generate Release Documentation

on:
  create:
    # Triggers when a branch or tag is created
    # Will only run when release/* branch is first created

jobs:
  generate-docs:
    # Only run when a release branch is created (not tags)
    if: github.ref_type == 'branch' && startsWith(github.ref, 'refs/heads/release/')
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Need full history for changelog generation
          
      - name: Extract version from branch name
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/heads/release/}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Extracted version: $VERSION"
          
      - name: Get latest release tag
        id: latest_tag
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          echo "latest_tag=$LATEST_TAG" >> $GITHUB_OUTPUT
          echo "Latest tag: ${LATEST_TAG:-'(none found)'}"
          
      - name: Generate release documentation and commit
        env:
          GITHUB_ACTIONS: true
          GITHUB_REF: ${{ github.ref }}
          GITHUB_STEP_SUMMARY: ${{ github.step_summary }}
        run: |
          # Make script executable
          chmod +x scripts/01_release_docs_generator.sh
          
          # Run the release documentation generator with commit flag
          if [ -n "${{ steps.latest_tag.outputs.latest_tag }}" ]; then
            ./scripts/01_release_docs_generator.sh \
              --version "${{ steps.version.outputs.version }}" \
              --latest-tag "${{ steps.latest_tag.outputs.latest_tag }}" \
              --force \
              --commit
          else
            ./scripts/01_release_docs_generator.sh \
              --version "${{ steps.version.outputs.version }}" \
              --force \
              --commit
          fi